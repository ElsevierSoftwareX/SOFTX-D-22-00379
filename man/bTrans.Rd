% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bTrans.R
\name{bTrans}
\alias{bTrans}
\title{Extract transects as SpatialLinesDataFrame}
\usage{
bTrans(shape.lns1, dist1 = NA, rast1, dir.name)
}
\arguments{
\item{shape.lns1}{\itemize{
\item Result of make.margin function - a list of 2 line shapefiles that
represent the relatively straight edges of the bluff buffer
}}

\item{dist1}{\itemize{
\item Distance between the transects - usually at raster resolution.
If dist1=NA, dist 1 is equal to raster resolution.
}}

\item{rast1}{\itemize{
\item Either full path including file name and extension (e.g. .tif for geotiff files)
of one DEM raster that was clipped with a buffer or a RasterLayer object.
}}

\item{dir.name}{\itemize{
\item The full path to the directory where a bluff transect subdirectory
called Transects will be created. The Transects subdirectory will have separate
subdirectories for each buffer and a Merged subdirectory. Individual line transects
will be saved as line shapefiles, one shapefile for each transect in its respective
buffer subdirectory. For rach buffer a merged line shapefile will be saved in the
merged subdirectory. If the dir.name given does not exist it will be created.
If dir.name is NA, the shapefiles will not be saved on the disk.
}}
}
\value{
A list of lists with transects as SpatialLinesDataFrame and Lines objects for each buffer.
}
\description{
This function establishes transects necessary for extracting elevation profiles
later on. The transects are within the buffer DEM and do not intersect each other.
}
\examples{
# Do not run
# coast1 <- system.file("extdata", "shore_line.shp", package = "iBluff")
# buff1 <- bBluff(coast1, NA)
# shore1 <- bCoast(coast1, NA)
# dem1 <- system.file("extdata", "dem_demo.tif", package = "iBluff")
# rast1 <- clip.rast(dem1, buff1,NA)
#
# n <- length(shore1)
# comb.n <-  combn(1:n,1)
# marg1 <- apply(comb.n, 2, function(x)
#   make.margins(buff1[[x]], shore1[[x]], rast1[[x]], NA))
#
# n <- length(marg1)
# comb.n <-  combn(1:n,1)
# trans1.all <- apply(comb.n, 2, function(x)
#   bTrans(marg1[[x]], dist1=NA, rast1[[x]], NA))

}
