% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/iDunes.R
\name{iDunes}
\alias{iDunes}
\title{Identify dune crests and troughs on beach profiles}
\usage{
iDunes(profs1, splits = list(), rast1, dir.name = NA)
}
\arguments{
\item{profs1}{\itemize{
\item A list of data.frames, each table is a beach profile.
Each table in the list has only 6 columns in this order with names:
xi, yi, zi, id, id1, and ID.prof where:
\item xi, yi, zi - coordinates, where zi represents elevation (in meters);
\item id - is a sequential id of rows in the table;
\item id1 = is the cumulative distance between points on profile;
\item ID.prof = is the index of the profile, if the list of profile tables has more than
one table then this index will identify uniquely the profile.
}}

\item{splits}{\itemize{
\item A lost that shows how to split the profile data:
If length(splits)=0 then splits are percentiles 5, 10, 20 ..... 90 and 95\%
of elevations along the profile.
\item If not - give a list with first element the function name (as character string) such as
"percentiles" or "sequence", or a user defined function name.
#' For "percentiles" or "sequence" the list has a second element that represents
probalities in (0, 1) for percentile mode ,(see quantiles function), or the
length for sequence mode (see seq function).
\item If the function is user defined, the function is applied to the detrended elevation values and
should results in a vector that gives break values in the space of the elevation detrended values.
}}

\item{rast1}{\itemize{
\item Either full path including file name and extension (e.g. .tif for geotiff files)
of one DEM raster that was clipped with a buffer or a RasterLayer object.
}}

\item{dir.name}{\itemize{
\item The full path to the directory where the subdirectory Dunes will be created
to save point shapefiles for dune crests and troughs. If the dir.name given does
not exist it will be created. If dir.name is NA, the shapefiles will not be saved on the disk.
}}
}
\value{
A list of lists of data.frames. Each list in the list of lists has 2 elements,
the first represents the data.frame for dune crests and the second represents the
data.frame for dune troughs.
}
\description{
The function gets all crests and troughs without knowing a priori the number of dunes.
All crests and troughs get a count or frequency to show how many times
the same point was identified since the search is done within percentiles
bands or any other type of data splits. The higher the frequency number the
more prominent the crest / trough is. The beach profile needs to have at least 6
data points, otherwise that profile will be ignored.
}
\examples{
# Do not run
# Use the prof.noveg list of data.frames and the bluff / cliff toes list (toe1) for
# obtaining the profs1 parameter. See get.toptoe function example. Or use a list
# of data.frames representing beach priofiles.
#
# n7 <- length(prof.noveg)
# comb.n7 <- combn(1:n7,1)
#
# profs1 <- apply(comb.n7, 2, function(x)
#   {n8<- length(prof.noveg[[x]]);
#    comb.n8 <- combn(1:n8,1);
#    apply(comb.n8, 2, function(i)
#      iBeach(prof.noveg[[x]][[i]], toe1[[x]]))})
#
# n9 <- length(profs1)
# comb.n9 <- combn(1:n9, 1)
#
# dunes <- apply(comb.n9, 2, function(x)
#   iDunes(profs1[[x]], splits=list(), rast1[[x]], NA))
#
# dune.crest <- dunes[[1]]
# dune.trough <- dunes[[2]]

}
